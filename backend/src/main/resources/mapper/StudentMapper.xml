<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fx.backend.domain.mapper.StudentMapper">

    <resultMap id="StudentResultMap" type="com.fx.backend.domain.entity.Student">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="studentId" column="student_id"/>
        <result property="name" column="name"/>
        <result property="className" column="class_name"/>
        <result property="major" column="major"/>
        <result property="enrollmentDate" column="enrollment_date"/>
        <result property="graduationDate" column="graduation_date"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <insert id="insert" parameterType="com.fx.backend.domain.entity.Student" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO students (user_id, student_id, name, class_name, major, enrollment_date, graduation_date, status)
        VALUES (#{userId}, #{studentId}, #{name}, #{className}, #{major}, #{enrollmentDate}, #{graduationDate}, #{status})
    </insert>

    <select id="findById" resultMap="StudentResultMap">
        SELECT * FROM students WHERE id = #{id}
    </select>

    <select id="findByStudentId" resultMap="StudentResultMap">
        SELECT * FROM students WHERE student_id = #{studentId}
    </select>

    <update id="update" parameterType="com.fx.backend.domain.entity.Student">
        UPDATE students
        SET name = #{name}, class_name = #{className}, major = #{major}, status = #{status},
            enrollment_date = #{enrollmentDate}, graduation_date = #{graduationDate}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM students WHERE id = #{id}
    </delete>

    <select id="page" resultMap="StudentResultMap">
        SELECT *
        FROM students
        <where>
            <if test="keyword != null and keyword != ''">
                (name LIKE CONCAT('%', #{keyword}, '%') OR student_id LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
        </where>
        ORDER BY created_at DESC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <select id="count" resultType="long">
        SELECT COUNT(1)
        FROM students
        <where>
            <if test="keyword != null and keyword != ''">
                (name LIKE CONCAT('%', #{keyword}, '%') OR student_id LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
        </where>
    </select>

</mapper>


